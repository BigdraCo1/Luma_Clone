@page
@model alma.Pages.Events.ViewEventModel

@{
    ViewData["Title"] = Model.Event.Name;
}

<div class="flex mx-auto max-w-240 gap-x-16 gap-y-4">
    <div class="w-96">
        <img src="/events/image?id=@Model.Event.Id" alt="Event image" class="object-cover w-96 h-96 rounded-xl">
        <p class="text-white">@Localizer["HostedBy"]</p>
        <div class="flex items-center gap-2">
            <img src="/users/avatar?id=@Model.Event.Host.Id" alt="Host avatar" width="24px" height="24px"
                class="object-cover rounded-full">
            <span class="flex-grow w-0 overflow-hidden text-gray-200 text-ellipsis text-nowrap">@Model.Event.Host.Name</span>
            @if (Model.Event.Host.InstagramUsername is not null) {
            <a href="https://instagram.com/@Model.Event.Host.InstagramUsername" class="transition-all hover:scale-110">@Icon.Inline("instagram", stroke: "rgb(209 213 219)")</a>
            }
            @if (Model.Event.Host.TwitterUsername is not null) {
                <a href="https://x.com/@Model.Event.Host.TwitterUsername" class="transition-all hover:scale-110">@Icon.Inline("twitter", lib: "external", size: "24", fill: "rgb(209 213 219)")</a>
            }
            @if (Model.Event.Host.YoutubeUsername is not null) {
                <a href="https://youtube.com/@@@Model.Event.Host.YoutubeUsername" class="transition-all hover:scale-110">@Icon.Inline("youtube", size: "28", stroke: "rgb(209 213 219)")</a>
            }
            @if (Model.Event.Host.TikTokUsername is not null) {
                <a href="https://tiktok.com/@@@Model.Event.Host.TikTokUsername" class="transition-all hover:scale-110">@Icon.Inline("tiktok", lib: "external", size: "22", fill: "rgb(209 213 219)")</a>
            }
            @if (Model.Event.Host.LinkedinHandle is not null) {
                <a href="https://linkedin.com/in/@Model.Event.Host.LinkedinHandle" class="transition-all hover:scale-110">@Icon.Inline("linkedin", stroke: "rgb(209 213 219)")</a>
            }
            @if (Model.Event.Host.WebsiteUrl is not null) {
                <a href="https://@Model.Event.Host.WebsiteUrl" class="transition-all hover:scale-110">@Icon.Inline("globe", stroke: "rgb(209 213 219)")</a>
            }
        </div>
        <p class="text-white">@Localizer["JoinedCountPrefix"] @Model.ApprovedParticipants.Count @Localizer["JoinedCountSuffix"]</p>
        <div class="flex items-center">
        @foreach (var participant in Model.ApprovedParticipants.Take(5)) {
            <a href="/users/profile?id=@participant.Id" class="p-0 m-0 -mr-4">
                <img src="/users/avatar?id=@participant.Id" alt="Participant avatar" width="24px" height="24px"
                    class="object-cover border-4 border-gray-900 rounded-full">
            </a>
        }
        </div>
    </div>
    <div class="flex-grow w-96">
        <h1 class="text-white">@Model.Event.Name</h1>
        <div class="flex mb-8 gap-x-16 gap-y-4">
            <div class="flex items-center gap-2">
                @Icon.Inline("calendar-clock", size: "48", stroke: "rgb(229 231 235)")
                <div>
                    <span class="block mb-1 font-semibold text-gray-200">@Localizer["Date"] @Formatter.FormatDate(Model.Event.StartAt)</span>
                    <span class="block text-gray-200">@Localizer["Time"] @Formatter.FormatTime(Model.Event.StartAt) - @Formatter.FormatTime(Model.Event.EndAt)</span>
                </div>
            </div>
            <div class="flex items-center gap-2">
                @Icon.Inline("map-pinned", size: "48", stroke: "rgb(229 231 235)")
                <div>
                    <span class="block mb-1 font-semibold text-gray-200">@Model.Event.LocationTitle</span>
                    <span class="block text-gray-200">@Model.Event.LocationSubtitle</span>
                </div>
            </div>
        </div>
        <h2 class="text-lg text-white">@Localizer["AboutEvent"]</h2>
        <p class="mb-8 text-gray-200">@Model.Event.Description</p>
        <h2 class="text-lg text-white">@Localizer["Location"]</h2>
        <p class="text-gray-200">@Model.Event.LocationTitle, @Model.Event.LocationSubtitle</p>
        <p class="text-gray-200">@Model.Event.LocationDescription</p>
        <div>
            <div class="flex items-center justify-between px-4 pt-1 bg-gray-300 rounded-t-xl">
                <span class="text-black">
                    @Localizer["Registration"]
                </span>
                <span class="text-black">
                    @Localizer["RegisteredPrefix"] @Model.ApprovedParticipants.Count @Localizer["RegisteredSuffix"] | @Localizer["CapacityPrefix"] @(Model.Event.MaxParticipants - Model.ApprovedParticipants.Count) @Localizer["CapacitySuffix"]
                </span>
            </div>
            @if (Model.IsRegistrationOpen) {
                <div class="gap-2 p-4 border-2 border-gray-300 rounded-b-xl">
                    <p class="mt-0 text-white">@Localizer["RegistrationQuestions"]</p>
                    <ol class="text-gray-200">
                        @foreach (var question in Model.Event.Questions) {
                            <li>
                                <div class="flex flex-col flex-grow mb-4">
                                    <label for="@question.Id" class="mb-2 text-gray-200">@question.Text</label>
                                    <input type="text" id="@question.Id" name="RegistrationData.Answers" placeholder="@Localizer["YourAnswer"]" class="px-4 py-2 text-gray-200 bg-transparent border-2 border-gray-400 rounded-xl focus:border-gray-200">
                                </div>
                            </li>
                            <li>
                                <div class="flex flex-col flex-grow mb-4">
                                    <label for="@question.Id" class="mb-2 text-gray-200">@question.Text</label>
                                    <input type="text" id="@question.Id" name="RegistrationData.Answers" placeholder="@Localizer["YourAnswer"]" class="px-4 py-2 text-gray-200 bg-transparent border-2 border-gray-400 rounded-xl focus:border-gray-200">
                                </div>
                            </li>
                        }
                    </ol>
                </div>
            } else {
                <div class="flex items-center justify-center gap-2 border-2 border-gray-300 rounded-b-xl">
                @Icon.Inline("lock", stroke: "rgb(229 231 235)")
                <p class="text-gray-200">@Localizer["RegistrationClosed"]</p>
                </div>
            }
        </div>
    </div>
</div>
