@page
@model alma.Pages.Events.IndexEventModel

@using System.Globalization;

@{
    ViewData["Title"] = "Index";
    var Event = Model.currentEvent;
    var host = Event.Host;
    var goingAttendees = Model.GoingAttendees;
    var displayAttendees = Model.DisplayAttendees;
    var currentCulture = CultureInfo.CurrentCulture.Name;
    var currentUser = Model.currentUser;
    var registered = Model.registered;
    var status = Model.Status;
}

<input type="hidden" id="currentUser" value="@((currentUser != null) ? "loggedIn" : "loggedOut")" />
<input type="hidden" id="registered" value="@((registered == true) ? "registered" : "not registered")" />

<div class="main" style="max-width: 1300px; margin-top: 60px; padding: 10px; display: grid; gap: 20px;">
    <!-- Image section -->
    <div class="image-section" style="grid-column: 1; grid-row: 1; overflow: hidden;">
        <img src="/events/image?id=@Event.Id" alt="Event image" class="event-image"
            style="width: 100%; aspect-ratio: 1/1; object-fit: cover; border-radius: 20px;">
    </div>

    <!-- amount of people section -->
    <div class="amount-people-section" style="grid-column: 1; grid-row: 2; border-radius: 12px;">
        <div class="Host"
            style="padding-bottom: 5px; border-bottom: 1px solid rgba(255, 255, 255, 0.2); font-size: 14px;">
            <p style="color: #EAEAEA;">@Localizer["Hosted-By"]</p>
        </div>
        <div class="organizer" style="padding: 10px;">
            <div class="profile" style="display: flex; align-items: center; justify-content: center; gap: 10px;">
                <div class="organizer-avatar"
                    style="width: 40px; height: 40px; border-radius: 50%; overflow: hidden; display: flex; align-items: center; justify-content: center;">
                    <img src="@Url.Page("/Users/Avatar", "Avatar", new { id = host.Id })" alt="รูปโปรไฟล์"
                        style="width: 100%; height: 100%; object-fit: cover;">
                </div>
                <p style="color: #EAEAEA;">@host.Username</p>
            </div>
            <button class="follow"
                style="background-color: transparent; border: 1px solid #8d8d8d; color: #8d8d8d; padding: 6px 18px; border-radius: 20px; cursor: pointer;">Follow</button>
        </div>
        <div class="registration-status">
            <div class="Host"
                style="padding-bottom: 5px; border-bottom: 1px solid rgba(255, 255, 255, 0.2); font-size: 14px;">
                @if (currentCulture == "th")
                {
                    <p style="color:#EAEAEA;">ลงทะเบียนแล้ว <strong>@goingAttendees.Count คน</strong></p>
                }
                else
                {
                    <p style="color:#EAEAEA;"><strong>@goingAttendees.Count </strong>going</p>
                }
            </div>
            <div class="attendees" style="display: flex; align-items: center; gap: 12px;">
                <div class="profile-stack" style="display: flex; margin: 10px;">
                    @foreach (var displayAttendee in displayAttendees)
                    {
                        <img src="@Url.Page("/Users/Avatar", "Avatar", new { id = displayAttendee.Id })" alt="Attendee 1"
                            class="profile-image"
                            style="width: 32px; height: 32px; border-radius: 50%; border: 2px solid #0a0a2e; margin-right: -8px;">
                    }
                </div>
                @if (goingAttendees.Count < 7) {
                <span class="others-text" style="color: #9ca3af; font-size: 14px;">@string.Join(", ", displayAttendees.Select(u => u.Username))</span>
                } else {
                    @if (currentCulture == "th") {
                <span class="others-text" style="color: #9ca3af; font-size: 14px;">@string.Join(", ", displayAttendees.Select(u => u.Username)) และคนอื่นๆ อีก @(goingAttendees.Count - displayAttendees.Count) คน</span>
                    } else {
                <span class="others-text" style="color: #9ca3af; font-size: 14px;">@string.Join(", ", displayAttendees.Select(u => u.Username)) and @(goingAttendees.Count - displayAttendees.Count) others</span>
                    }
                }
            </div>
        </div>
    </div>

    <!-- Right column -->
    <div class="right-column" style="grid-column: 2; grid-row: 1 / span 3; border-radius: 12px; padding: 10px;">
        <div class="title">
            <h1 class="event-title" style="font-size: 48px; color: #EAEAEA;">@Event.Name</h1>
        </div>
        <div class="event-details-header" style="display: flex; justify-content: space-between;">
            <div class="date"
                style="display: flex; padding: 10px; justify-content: start; align-items: center; width: 50%;">
                <div class="icon" style="padding: 15px; color: #8d8d8d;">
                    <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none"
                        stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                        class="lucide lucide-calendar-check-2">
                        <path d="M8 2v4" />
                        <path d="M16 2v4" />
                        <path d="M21 14V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8" />
                        <path d="M3 10h18" />
                        <path d="m16 20 2 2 4-4" />
                    </svg>
                </div>
                <div class="info">
                    <p style="color: #EAEAEA;">@Event.StartAt.ToString("dddd, MMMM dd")</p>
                    <p style="color: #EAEAEA;">@Event.StartAt.ToString("HH:mm") - @Event.EndAt.ToString("HH:mm")</p>
                </div>
            </div>
            <div class="place"
                style="display: flex; padding: 10px; justify-content: start; align-items: center; width: 50%;">
                <div class="icon" style="padding: 15px; color: #8d8d8d;">
                    <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none"
                        stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                        class="lucide lucide-map-pin">
                        <path
                            d="M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0" />
                        <circle cx="12" cy="10" r="3" />
                    </svg>
                </div>
                <div class="info">
                    <p style="color: #EAEAEA;">@Event.LocationTitle</p>
                    <p style="color: #EAEAEA;">@Event.LocationSubtitle</p>
                </div>
            </div>
        </div>
        <div class="register" style="border: solid #eaeaea 1px; border-radius: 20px; overflow: hidden;">
            @if (registered) {
                <div class="top"
                    style="display: flex; color: #000480; justify-content: space-between; padding: 5px 20px; background-color: #eaeaea;">
                    <div class="organizer-avatar"
                    style="width: 40px; height: 40px; border-radius: 50%; overflow: hidden; display: flex; align-items: center; justify-content: center;">
                    <img src="@Url.Page("/Users/Avatar", "Avatar", new { id = currentUser.Id })" alt="รูปโปรไฟล์"
                        style="width: 100%; height: 100%; object-fit: cover;">
                </div>
                    <h4>@Localizer["ThankYouforJoining"]</h4>
                </div>
                @if (status == "GOING") {
                <div class="bottom" style="padding: 10px;">
                    <p style="padding: 0px 5px 10px 15px; color: #eaeaea;">@Localizer["EnjoyEvent"]</p>
                </div>
                } else if (status == "PENDING") {
                <div class="bottom" style="padding: 10px;">
                    <p style="padding: 0px 5px 10px 15px; color: #eaeaea;">@Localizer["PendingRequest"]</p>
                </div>
                } else {
                <div class="bottom" style="padding: 10px;">
                    <p style="padding: 0px 5px 10px 15px; color: #eaeaea;">@Localizer["RejectResponse"]</p>
                </div>
                }
            }
            else if (Event.ApprovalType == "Required") {
                <!-- ต้องได้รับการยืนยัน -->
                <div class="top"
                    style="display: flex; color: #000480; justify-content: space-between; padding: 5px 20px; background-color: #eaeaea;">
                    <h4>@Localizer["Registration"]</h4>
                </div>
                <div class="mid"
                    style="display: flex; justify-content: start; align-items: center; padding: 10px; border-bottom: solid #eaeaea 1px;">
                    <div class="icon" style="margin: 0px 20px;">
                        <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none"
                            stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                            class="lucide lucide-user-round-check">
                            <path d="M2 21a8 8 0 0 1 13.292-6" />
                            <circle cx="10" cy="8" r="5" />
                            <path d="m16 19  2 2 4-4" />
                        </svg>
                    </div>
                    <div class="info">
                        <h3 style="color: #eaeaea;">@Localizer["Approval-Required"]</h3>
                        <p style="color: #eaeaea;">@Localizer["Approval-text"]</p>
                    </div>
                </div>
                <div class="bottom" style="padding: 10px;">
                    <p style="padding: 0px 5px 10px 15px; color: #eaeaea;">@Localizer["Welcome!"]</p>
                    <button class="button"
                        style="background: linear-gradient(to right, #a8007b, #ff2525); background-size: 200% auto; color: #eaeaea; padding: 12px; border-radius: 15px; text-align: center; cursor: pointer; border: none; width: 100%; font-size: 16px; transition: background-position 0.3s ease-in-out;" onclick="handleRegisterClick()">@Localizer["Register"]</button>
                </div>
            }
            else
            {
                <div class="top"
                    style="display: flex; color: #000480; justify-content: space-between; padding: 5px 20px; background-color: #eaeaea;">
                    <h4>@Localizer["Registration"]</h4>
                </div>
                <div class="bottom" style="padding: 10px;">
                    <p style="padding: 0px 5px 10px 15px; color: #eaeaea;">@Localizer["Welcome!"]</p>
                    <button class="button"
                        style="background: linear-gradient(to right, #a8007b, #ff2525); background-size: 200% auto; color: #eaeaea; padding: 12px; border-radius: 15px; text-align: center; cursor: pointer; border: none; width: 100%; font-size: 16px; transition: background-position 0.3s ease-in-out;" onclick="handleRegisterClick()">@Localizer["Register"]</button>
                </div>
            }
        </div>
        <div class="map-container" style="width: 100%; border-radius: 8px; margin-top: 30px;">
            <div class="aboutevent"
                style="padding-bottom: 5px; border-bottom: 1px solid rgba(255, 255, 255, 0.2); font-size: 14px;">
                <p style="color: #EAEAEA;">@Localizer["About-Event"]</p>
            </div>
            <div class="details">
                <textarea id="eventDetails" class="info-text"
                    style="width: 100%; min-height: 50px; resize: none; overflow-y: hidden; background-color: transparent; color: #eaeaea; border: none; padding: 10px; outline: none; pointer-events: none; font-size: 14px;">@Event.Description</textarea>
            </div>
            <div class="event-place">
                <div class="aboutevent"
                    style="padding-bottom: 5px; border-bottom: 1px solid rgba(255, 255, 255, 0.2); font-size: 14px;">
                    <p style="color: #EAEAEA;">@Localizer["Location"]</p>
                </div>
                <textarea id="eventLocation" class="info-text"
                    style="width: 100%; min-height: 50px; resize: none; overflow-y: hidden; background-color: transparent; color: #eaeaea; border: none; padding: 10px; outline: none; pointer-events: none; font-size: 14px;">@Event.LocationDescription</textarea>
                <iframe
                    src="@Event.LocationGMapUrl"
                    width="600" height="450" style="border:0; margin-bottom: 10px; border-radius: 20px;"
                    allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
            </div>
        </div>
    </div>
</div>

<!-- Modal for answering questions -->
<div id="questionsModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeQuestionsModal()">&times;</span>
        <h2>@Localizer["AnswerQuestions"]</h2>
        <form id="questionsForm" method="post" asp-page-handler="Register">
            <input type="hidden" name="Register.EventId" value="@Event.Id" />
            @foreach (var question in Event.Questions)
            {
                <div class="question">
                    <label for="question_@question.Id">@question.Text</label>
                    <input type="text" id="question_@question.Id" name="Register.Answers[@question.Id]" required />
                </div>
            }
            <button type="submit" class="button">@Localizer["SubmitAnswers"]</button>
        </form>
    </div>
</div>

<script>
    function autoResize(textarea) {
        textarea.style.height = 'auto';
        textarea.style.height = textarea.scrollHeight + 'px';
    }

    const textareas = document.querySelectorAll('.info-text');

    textareas.forEach(textarea => {
        // Initial resize
        autoResize(textarea);

        // Resize on input
        textarea.addEventListener('input', function () {
            autoResize(this);
        });
    });

    // Resize on window resize
    window.addEventListener('resize', function () {
        textareas.forEach(autoResize);
    });

    function handleRegisterClick() {
        const currentUserStatus = document.getElementById('currentUser').value;
        if (currentUserStatus === 'loggedOut') {
            window.location.href = '/auth/sign-in?next=/Events/Index-Event?tuid=@Event.Id';
        } else {
            openQuestionsModal();
        }
    }

    function openQuestionsModal() {
        document.getElementById('questionsModal').style.display = 'block';
    }

    function closeQuestionsModal() {
        document.getElementById('questionsModal').style.display = 'none';
    }

    // Close the modal when clicking outside of it
    window.onclick = function(event) {
        const questionsModal = document.getElementById('questionsModal');
        if (event.target == questionsModal) {
            questionsModal.style.display = 'none';
        }
    }
</script>

<style>
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0,0.4);
        padding-top: 60px;
    }

    .modal-content {
        background-color: #fefefe;
        margin: 5% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        border-radius: 10px;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover,
    .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
    }
</style>